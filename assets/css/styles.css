:root {
  --small-mw: 50rem;
  --body-p: min(6.4vw, 2rem);
  --color-primary: #b0464b;
  --color-primary-dark: #64282b;
  --color-primary-light: #fb646b;
  --color-secondary: #6c24b1;
  --color-secondary-dark: #3e1565;
  --color-secondary-light: #ae5dfd;
  --color-primary-rgb: 176, 70, 75;
  --color-primary-dark-rgb: 100, 40, 43;
  --color-primary-light-rgb: 251, 100, 107;
  --color-secondary-rgb: 108, 36, 177;
  --color-secondary-dark-rgb: 62, 21, 101;
  --color-secondary-light-rgb: 174, 93, 253;
  --bg-color: #121212;
  --text-color: #fff;
}

*:where(:not(iframe, canvas, img, svg, video, input, select, ul, ol, details, summary, dialog):not(svg *, symbol *)) {
  all: unset;
  display: revert;
}

:root {
  --global-lh: calc(1em + 0.25rem);
}

*,
*::before,
*::after {
  line-height: var(--global-lh);
}

a,
button {
  cursor: pointer;
}
a:hover,
button:hover {
  outline: 2px dashed currentColor;
  outline-offset: 0.2rem;
}

a:where(:not(.btn)):hover {
  color: var(--color-primary);
}

svg {
  fill: none;
  stroke: currentColor;
  stroke-width: 1.5;
  stroke-linecap: round;
  stroke-linejoin: round;
}

img {
  max-width: 100%;
  height: auto;
}

/** --------------------------------------------
 * 
 * Box sizing
 * 
 -------------------------------------------- */
*,
*::before,
*::after {
  box-sizing: inherit;
}

/** --------------------------------------------
 * 
 * Base styles for <html>
 * 
 -------------------------------------------- */
html {
  height: 100%;
  box-sizing: border-box;
  font-family: "Exo", monospace;
  font-size: 100%;
  font-weight: 500;
  color: var(--text-color);
  background: radial-gradient(rgba(var(--color-primary-dark-rgb), 0.625) 0, transparent 70%), linear-gradient(var(--bg-color) 40%, var(--color-secondary-dark) 70%);
  background-color: var(--bg-color);
  background-attachment: fixed;
}

/** --------------------------------------------
 * 
 * Base styles for <body>
 * 
 -------------------------------------------- */
body {
  min-height: 100%;
  text-rendering: optimizeSpeed;
  text-shadow: 0 0 0.25em rgb(200, 200, 200);
  line-height: 1.25;
  max-width: 90rem;
  margin: 0 auto;
  padding: var(--body-p);
}

/** --------------------------------------------
 * 
 * Apply outline only for keyboard users (and when browser considers user need it)
 * 
 -------------------------------------------- */
:focus:not(:focus-visible) {
  outline: 0;
}

:focus-visible {
  outline-style: auto;
}

/** --------------------------------------------
 * 
 * Screen reader only CSS class (https://gist.github.com/ffoodd/000b59f431e3e64e4ce1a24d5bb36034)
 * 
 -------------------------------------------- */
.sr-only {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  border: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(1px, 1px, 1px, 1px) !important;
  white-space: nowrap !important;
  clip-path: inset(50%) !important;
  clip-path: inset(50%) !important;
}

/** --------------------------------------------
 * 
 * Indicates that user has notified the system that they prefer an interface that removes or replaces the types of motion-based animation that trigger discomfort.
 * 
 -------------------------------------------- */
@media (prefers-reduced-motion: reduce) {
  *,
::before,
::after {
    transition-duration: 0.001ms !important;
    animation-duration: 0.001ms !important;
    animation-iteration-count: 1 !important;
  }
}
/** --------------------------------------------
 * 
 * Applies styles to the part of a document that has been highlighted by the user
 * 
 -------------------------------------------- */
::selection {
  color: #fff;
  background-color: var(--color-primary, #b0464b);
}

/** --------------------------------------------
 * 
 * 
 * 
 -------------------------------------------- */
.is-hidden {
  display: none;
}

p a {
  text-decoration: underline;
}

p {
  margin-bottom: 0;
}
p:where(:not(:first-child)) {
  margin-top: 1em;
}
p b {
  font-weight: 700;
}

h1,
h2,
h3 {
  margin-bottom: var(--body-p);
}

h1 {
  position: relative;
  width: fit-content;
  margin-left: auto;
  margin-right: auto;
  text-align: center;
  text-transform: uppercase;
  font-weight: 900;
  font-size: clamp(1.75rem, 3vw + 0.75rem, 3.375rem);
  text-shadow: none;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  background-image: linear-gradient(to bottom, var(--color-primary-light), var(--color-secondary-light));
  filter: drop-shadow(0.14em 0.14em 0.22em var(--color-secondary)) drop-shadow(-0.14em -0.14em 0.22em var(--color-primary));
}
@media (min-width: 40rem) {
  h1 {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
  }
  h1::after {
    content: "";
    position: absolute;
    top: -0.36em;
    right: -0.36em;
    width: 1em;
    height: 1em;
    background: radial-gradient(white 3%, rgba(255, 255, 255, 0.3) 15%, rgba(255, 255, 255, 0.05) 60%, transparent 80%), radial-gradient(rgba(255, 255, 255, 0.2) 50%, transparent 60%) 50% 50%/5% 100%, radial-gradient(rgba(255, 255, 255, 0.2) 50%, transparent 60%) 50% 50%/70% 5%;
    background-repeat: no-repeat;
    opacity: 0.75;
  }
}
h1 ::selection {
  -webkit-text-fill-color: white;
}
h1 svg {
  width: var(--global-lh);
  height: var(--global-lh);
  vertical-align: bottom;
}
h1 span {
  display: inline-block;
}
@media (min-width: 40rem) {
  h1 span {
    display: inline;
  }
}

h2 {
  font-size: clamp(1.25rem, 2vw + 0.5rem, 1.563rem);
}

.subtitle {
  text-align: center;
  font-weight: 500;
  text-shadow: none;
}
.subtitle__content {
  --word-my: 0.5em;
  margin: calc(var(--word-my) * -1);
}
.subtitle__word {
  --px: 1.25em;
  --skewY: calc(var(--px) / 2);
  --hole-offset: var(--skewY);
  --hole-size: 0.4em;
  position: relative;
  display: block;
  width: fit-content;
  margin: var(--word-my) auto;
  text-align: center;
  font-style: italic;
  font-weight: 900;
  text-transform: uppercase;
}
@media (min-width: 40rem) {
  .subtitle__word {
    display: inline-block;
  }
}
.subtitle__word span {
  display: block;
  padding: 0.25em var(--px);
  background-image: linear-gradient(45deg, var(--color-primary) calc(var(--hole-offset) + var(--hole-size)), var(--color-secondary) calc(100% - var(--hole-offset) - var(--hole-size)));
  clip-path: polygon(0 100%, var(--skewY) 0, 100% 0, calc(100% - var(--skewY)) 100%);
}
@media (min-width: 64rem) and (prefers-reduced-motion: no-preference) {
  .subtitle__word:nth-of-type(1) {
    --t-x1: calc(100% - var(--hole-offset) * 0.75 - var(--hole-size) * 1.75);
    --t-x2: calc(100% - var(--hole-offset) * 0.75);
    --b-x1: calc(var(--hole-offset) * 0.75);
    --b-x2: calc(var(--hole-offset) + var(--hole-size) * 1.5);
  }
  .subtitle__word:nth-of-type(1)::before {
    --orange: #fd6d14;
    --blue: #04a6e7;
    content: "";
    position: absolute;
    z-index: 1;
    width: calc(var(--b-x2) - var(--b-x1));
    height: calc(var(--b-x2) - var(--b-x1));
    border: 0.15em solid transparent;
    filter: blur(0.05em);
    animation: portal-move 3s -0.75s infinite steps(1);
  }
  .subtitle__word:nth-of-type(1)::after {
    --arrow-size: calc(var(--hole-size) * 1.75);
    content: "";
    position: absolute;
    z-index: -1;
    width: var(--arrow-size);
    height: var(--arrow-size);
    clip-path: polygon(0% 0%, 50% 75%, 100% 0%);
    animation: portal-arrow 3s infinite cubic-bezier(0.5, 0, 0.5, 1);
  }
  .subtitle__word:nth-of-type(1) span {
    clip-path: polygon(0 100%, var(--hole-offset) 0, var(--t-x1) 0, calc(100% - var(--hole-offset) - var(--hole-size) / 2) var(--hole-size), var(--t-x2) 0, 100% 0, calc(100% - var(--skewY)) 100%, var(--b-x2) 100%, calc(var(--hole-offset) + var(--hole-size) / 2) calc(100% - var(--hole-size)), var(--b-x1) 100%);
  }
}
@media (min-width: 64rem) and (prefers-reduced-motion: no-preference) {
  .subtitle__word:nth-of-type(2) {
    --bx-1: 15%;
    --bx-2: 32%;
    --bx-3: 65%;
    --s: 0.25em;
    --rect-y: calc(100% + 1em);
    --rect-w: 1em;
    --rect-h: 0.25em;
    --ball-s: 0.25em;
    --dur: 3s;
  }
  .subtitle__word:nth-of-type(2)::before {
    content: "";
    position: absolute;
    top: var(--rect-y);
    left: 0;
    width: 1em;
    height: var(--rect-h);
    background-image: linear-gradient(45deg, var(--color-secondary), var(--color-primary));
    animation: wallbreaker-rect var(--dur) infinite cubic-bezier(0.67, 1, 0.5, -0.3);
  }
  .subtitle__word:nth-of-type(2)::after {
    content: "";
    position: absolute;
    left: calc(var(--rect-w) / 2 - var(--ball-s) / 2);
    width: var(--ball-s);
    height: var(--ball-s);
    border-radius: 50%;
    background-color: #9e9e9e;
    animation: wallbreaker-rect var(--dur) infinite linear, wallbreaker-ball var(--dur) infinite linear;
  }
  .subtitle__word:nth-of-type(2) span {
    animation: wallbreaker var(--dur) steps(9) infinite;
  }
}
.subtitle br {
  display: none;
}
@media (min-width: 40rem) {
  .subtitle br {
    display: block;
  }
}
@media (min-width: 64rem) {
  .subtitle br {
    display: none;
  }
}

h3 {
  font-size: clamp(1.063rem, 2vw + 0.5rem, 1.375rem);
}

@keyframes portal-move {
  0% {
    left: var(--b-x1);
    bottom: 0;
    transform: translateY(50%) rotate(45deg);
    border-top-color: var(--blue);
    border-left-color: var(--blue);
  }
  50% {
    left: var(--t-x1);
    top: 0;
    bottom: auto;
    transform: translateY(-50%) rotate(45deg) scale(-1);
    border-top-color: var(--orange);
    border-left-color: var(--orange);
  }
}
@keyframes portal-arrow {
  0%, 24.99% {
    left: var(--b-x1);
  }
  25.01%, 74.99% {
    left: var(--t-x1);
  }
  75.01%, 100% {
    left: var(--b-x1);
  }
  0%, 40% {
    transform: rotate(-180deg);
  }
  50%, 90% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(180deg);
  }
  0% {
    top: calc(100% + var(--arrow-size));
    background-color: var(--color-secondary);
  }
  50% {
    top: calc(var(--arrow-size) * -2);
    background-color: var(--color-primary);
  }
  100% {
    top: calc(100% + var(--arrow-size));
    background-color: var(--color-secondary);
  }
}
@keyframes wallbreaker-rect {
  to {
    left: 100%;
  }
}
@keyframes wallbreaker-ball {
  0% {
    top: calc(var(--rect-y) - var(--ball-s));
  }
  10% {
    top: 100%;
  }
  22% {
    top: calc(var(--rect-y) - var(--ball-s));
  }
  28% {
    top: 100%;
  }
  50% {
    top: calc(var(--rect-y) - var(--ball-s));
  }
  62% {
    top: 100%;
  }
  100% {
    top: calc(var(--rect-y) - var(--ball-s));
  }
}
@keyframes wallbreaker {
  20% {
    clip-path: polygon(calc(100% - var(--skewY)) 100%, 100% 0%, var(--skewY) 0%, 0% 100%, var(--bx-1) 100%, var(--bx-1) calc(100% - var(--s)), calc(var(--bx-1) + var(--s)) calc(100% - var(--s)), calc(var(--bx-1) + var(--s)) 100%);
  }
  35% {
    clip-path: polygon(calc(100% - var(--skewY)) 100%, 100% 0%, var(--skewY) 0%, 0% 100%, var(--bx-1) 100%, var(--bx-1) calc(100% - var(--s)), calc(var(--bx-1) + var(--s)) calc(100% - var(--s)), calc(var(--bx-1) + var(--s)) 100%, var(--bx-2) 100%, var(--bx-2) calc(100% - var(--s)), calc(var(--bx-2) + var(--s)) calc(100% - var(--s)), calc(var(--bx-2) + var(--s)) 100%);
  }
  85% {
    clip-path: polygon(calc(100% - var(--skewY)) 100%, 100% 0%, var(--skewY) 0%, 0% 100%, var(--bx-1) 100%, var(--bx-1) calc(100% - var(--s)), calc(var(--bx-1) + var(--s)) calc(100% - var(--s)), calc(var(--bx-1) + var(--s)) 100%, var(--bx-2) 100%, var(--bx-2) calc(100% - var(--s)), calc(var(--bx-2) + var(--s)) calc(100% - var(--s)), calc(var(--bx-2) + var(--s)) 100%, var(--bx-3) 100%, var(--bx-3) calc(100% - var(--s)), calc(var(--bx-3) + var(--s)) calc(100% - var(--s)), calc(var(--bx-3) + var(--s)) 100%);
  }
}
.btn {
  --bg-start: var(--color-primary-light);
  --bg-end: var(--color-primary);
  --bg: linear-gradient(to bottom, var(--bg-start), var(--bg-end));
  --shadow: var(--color-primary-dark);
  position: relative;
  display: inline-block;
  padding: 0.5em 1em;
  border-radius: 100em;
  box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.6), 0 3px 0 4px var(--shadow), inset 0 1px 0 0 rgba(255, 255, 255, 0.5);
  background: var(--bg);
  color: #fff;
  font-weight: 900;
  text-transform: uppercase;
  text-shadow: none;
}
.btn--sm {
  font-size: 0.75rem;
}
.btn--secondary {
  --bg-start: var(--color-secondary-light);
  --bg-end: var(--color-secondary);
  --shadow: var(--color-secondary-dark);
}
.btn--grey {
  --bg-start: #6f7371;
  --bg-end: #54585a;
  --shadow: #2f3132;
}
.btn:hover {
  outline: none;
}
.btn:hover, .btn:focus-visible {
  --bg: var(--bg-end);
  transform: translateY(1.5px);
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.6), 0 1.5px 0 4px var(--shadow), inset 0 1px 0 0 rgba(255, 255, 255, 0.25);
}
.btn:active {
  transform: translateY(3px);
  box-shadow: inset 0 0 3px 0 rgba(0, 0, 0, 0.4), 0 0 0 4px var(--shadow);
}

:root {
  --neon-icon-s: 8.75rem;
}

.neon-icon {
  stroke-width: 1;
  width: var(--neon-icon-s);
  height: var(--neon-icon-s);
  pointer-events: none;
}
@media (min-width: 64rem) {
  .neon-icon {
    position: absolute;
  }
}
.neon-icon [style*=color] {
  filter: drop-shadow(0px 0px 2px currentColor) drop-shadow(0px 0px 2px currentColor) drop-shadow(0px 0px 4px currentColor);
}

.neon-icons {
  position: absolute;
  z-index: -1;
  top: calc(100% + 1rem);
  left: 0;
  right: 0;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}
@media (min-width: 64rem) {
  .neon-icons {
    top: 0;
    bottom: 0;
  }
  .neon-icons :nth-child(odd) {
    left: calc(100% + 1rem);
  }
  .neon-icons :nth-child(even) {
    right: calc(100% + 1rem);
  }
  .neon-icons :nth-child(1),
.neon-icons :nth-child(2) {
    top: 0;
  }
  .neon-icons :nth-child(3),
.neon-icons :nth-child(4) {
    top: calc(50% - var(--neon-icon-s) / 2);
  }
  .neon-icons :nth-child(5),
.neon-icons :nth-child(6) {
    bottom: 0;
  }
}
@supports (background: -webkit-named-image(i)) {
  .neon-icons {
    display: none;
  }
}

#icon-megaman .diode {
  --dur: 1.5s;
  animation: megaman var(--dur) infinite steps(2);
}

#icon-megaman .diode--2 {
  animation-delay: calc(var(--dur) * 0.25);
}

@keyframes megaman {
  to {
    filter: none;
  }
}
#icon-samus .visor {
  animation: fadeOut 1.5s infinite alternate ease-in;
}

#icon-triforce .disc {
  --dur: 3s;
  fill: currentColor;
  stroke: none;
  offset-path: path("M122.7 116.3H27.5L75 33.9z");
  animation: triforce var(--dur) infinite cubic-bezier(0.5, 1.5, 0.5, -0.5);
}

#icon-triforce .disc--2 {
  animation-delay: calc(var(--dur) / -2);
  offset-path: path("M99 75H51M51 75l24 41M75 116l24-41");
}

@keyframes triforce {
  to {
    offset-distance: 100%;
  }
}
#icon-pokeball {
  animation: pokeball 3.5s cubic-bezier(0.4, 0.1, 0.2, 1) infinite;
}

#icon-pokeball .disc {
  stroke: none;
  fill: currentColor;
  animation: fadeOut 1s cubic-bezier(0.5, 2, 0, -0.5) alternate infinite;
}

@keyframes pokeball {
  0% {
    transform: none;
  }
  10% {
    transform: translate(-0.25rem, 0) rotate(-15deg);
  }
  15% {
    transform: translate(0.25rem, 0) rotate(15deg);
  }
  25% {
    transform: translate(-0.25rem, 0) rotate(-5deg);
  }
  30% {
    transform: translate(0.25rem, 0) rotate(5deg);
  }
  50%, 100% {
    transform: none;
  }
}
@keyframes fadeOut {
  to {
    opacity: 0;
  }
}
.link-icon {
  display: inline-flex;
  align-items: center;
  vertical-align: bottom;
}
.link-icon svg {
  width: 1.25em;
  height: 1.25rem;
  margin-right: 0.25rem;
  color: var(--color-primary);
}

.tabs [role=tablist] {
  display: flex;
  justify-content: center;
  gap: 1rem;
  margin-bottom: 2rem;
}
.tabs [role=tab] {
  text-transform: uppercase;
  font-weight: 900;
  outline-color: var(--color-primary);
}
.tabs [role=tab][aria-selected=false] {
  text-shadow: none;
}
.tabs [role=tab][aria-selected=true] {
  text-decoration-line: underline;
  text-decoration-color: var(--color-secondary-light);
  text-decoration-thickness: 0.25em;
  text-underline-offset: 0.25em;
}
.tabs [role=tabpanel] {
  flex-direction: column;
  align-items: center;
  gap: 1.5rem;
}
.tabs [role=tabpanel]:not(.is-hidden) {
  display: flex;
}

.dialog {
  --x: 1.5rem;
  left: var(--x);
  right: var(--x);
  max-width: 60rem;
  width: calc(100vw - var(--x) * 2);
  padding: 2rem;
  text-shadow: none;
  overscroll-behavior: contain;
}
.dialog::backdrop {
  background-color: rgba(0, 0, 0, 0.5);
}
.dialog__head {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 1rem;
  padding-bottom: 1.5rem;
  border-bottom: 0.0625rem solid rgba(0, 0, 0, 0.2);
  margin-bottom: 1.5rem;
}
.dialog__head button {
  margin-left: auto;
}
.dialog__title {
  font-weight: 900;
  text-transform: uppercase;
  color: var(--color-primary);
  margin: 0;
}
.dialog h3 {
  color: var(--color-primary);
}
.dialog h3, .dialog h4 {
  font-weight: 900;
  margin: 1em 0;
}
.dialog .support {
  display: block;
  width: fit-content;
  margin: 0 auto;
}

.grid {
  perspective: 700px;
  position: fixed;
  bottom: -120vh;
  left: 50%;
  width: 300vw;
  height: 300vh;
  z-index: -1;
  pointer-events: none;
  transform: translateX(-50%);
}
.grid::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(transparent 65%, rgba(var(--color-secondary-rgb), 0.4) 75%, var(--color-secondary) 80%, rgba(var(--color-secondary-rgb), 0.4) 85%, transparent 95%), linear-gradient(90deg, transparent 65%, rgba(var(--color-secondary-rgb), 0.4) 75%, var(--color-secondary) 80%, rgba(var(--color-secondary-rgb), 0.4) 85%, transparent 95%);
  background-size: 30px 30px;
  mask-image: linear-gradient(black, rgba(0, 0, 0, 0) 80%);
  transform: rotateX(-100deg);
}
@supports not selector(div::target-text) {
  @media (min-width: 48rem) and (prefers-reduced-motion: no-preference) {
    .grid::after {
      animation: grid 181s linear infinite;
    }
  }
}

@keyframes grid {
  from {
    background-position: bottom center;
  }
  to {
    background-position: top center;
  }
}
.main {
  --rad: 1rem;
  --p: .2rem;
  position: relative;
  z-index: 0;
  max-width: 40rem;
  padding: var(--p);
  margin: auto;
  border-radius: var(--rad);
  background-image: linear-gradient(45deg, var(--color-primary), var(--color-secondary));
}
.main::before {
  content: "";
  z-index: -1;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  filter: blur(10px);
  background-image: linear-gradient(to top right, var(--color-primary-light), var(--color-secondary-light));
}
.main__content {
  padding: 2rem;
  border-radius: calc(var(--rad) - var(--p));
  background-color: var(--bg-color);
  box-shadow: inset 0.625rem -0.625rem 1.25rem -0.625rem var(--color-primary-light), inset -0.625rem 0.625rem 1.25rem -0.625rem var(--color-secondary-light);
}

.options {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
  align-items: center;
  justify-content: center;
  margin-bottom: 2rem;
}
.options select {
  min-width: 4rem;
  height: 2em;
  font-size: 1rem;
  -webkit-appearance: menulist-button;
  accent-color: var(--color-primary);
}

.about {
  display: flex;
  gap: 1rem;
  flex-wrap: wrap;
  justify-content: center;
  margin-top: 2rem;
  text-align: center;
}

/*# sourceMappingURL=styles.css.map */